buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.5.2.RELEASE")
    }
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'

jar {
    manifest {attributes('Main-Class': 'Main')}
}

repositories {
    mavenCentral()
}

dependencies {
    compile "org.springframework.boot:spring-boot-starter-web"
    compile "org.projectlombok:lombok:1.16.14"
    testCompile 'org.springframework.boot:spring-boot-starter-test'
}

// Define integration test
sourceSets {
    intest {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/intest/java')
        }
        resources.srcDir file('src/intest/resources')
    }
}

configurations {
    intestCompile.extendsFrom testCompile
    intestRuntime.extendsFrom testRuntime
}

task intest(type: Test) {
    testClassesDir = sourceSets.intest.output.classesDir
    classpath = sourceSets.intest.runtimeClasspath
    outputs.upToDateWhen {false}
}
check.dependsOn intest
intest.mustRunAfter test